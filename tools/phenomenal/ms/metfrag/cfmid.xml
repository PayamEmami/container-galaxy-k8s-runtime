<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/).-->
<!--Proposed Tool Section: [PhenoMeNal]-->
<tool id="cfmid" name="cfmid" version="0.1">
<!--   <requirements>
        <container type="docker">container-registry.phenomenal-h2020.eu/phnmnl/container-cfmid</container>
  </requirements>-->
  <description>Run CFM-ID with a given parameter set.</description>
  <command><![CDATA[
  
 /usr/local/bin/cfmid.r input=$input 
realName=$input.name  
databaseFile=$databaseFile 
output=$output 
candidate_id=$candidate_id 
candidate_inchi_smiles=$candidate_inchi_smiles 
candidate_mass=$candidate_mass 
databaseNameColumn=$databaseNameColumn 
databaseInChIColumn=$databaseInChIColumn 
    #if $ppm != "None"
        ppm=$ppm 
    #end if
	#if $ionization != "None"
    ionization=$ionization 
    #end if
  #if $ppmPrecursor!= "None"
        ppmPrecursor=$ppmPrecursor 
    #end if
    #if $absDev!= "None"
        absDev=$absDev 
    #end if
    #if $scoreType!= "None"
        scoreType=$scoreType 
    #end if    
	;c("DotProduct","Jaccard"))
  ]]>
  </command>
  <inputs>
    <param name="input" type="data" format="txt" optional="False" label="File with MetFrag parameters" help="File containing MetFrag parameters which is generated by msms2metfrag" />
<param name="input" type="data" format="csv" optional="False" label="Database file containing the molecules to be searched" help="This is a CSV file and has to contain candidate ID, name of the metabolite, InChi, SMILES and monoisotopic mass. It must have column header which will be specified below" />
	<param name="candidate_id" type="text" format="txt" value="Identifier" optional="False" label="Column name representing ID of the database file" help="" />
	<param name="candidate_inchi_smiles" type="text" format="txt" value="SMILES" optional="False" label="Column name representing Inchi or SMILES of the database file" help="" />
	<param name="candidate_mass" type="text" format="txt" value="MonoisotopicMass" optional="False" label="Column name representing monoisotopic mass of the database file" help="" />
	<param name="databaseNameColumn" type="text" format="txt" value="Name" optional="False" label="Column name representing name of the database file" help="" />
	<param name="databaseInChIColumn" type="text" format="txt" value="InChI" optional="False" label="Column name representing name of the database file" help="" />

	<param name="ppm" type="text" format="txt" value="" optional="True" label="Fragment PPM" help="The ppm error for the fragment mass to search candidates (this will overwrite the corresponding parameter in the input file)" />
	<param name="absDev" type="text" format="txt" value="" optional="True" label="Fragment absolute deviation" help="The absolute error for the fragment mass to search candidates (this will overwrite the corresponding parameter in the input file)" />

	<param name="ppmPrecursor" type="text" format="txt" value="" optional="True" label="Precursor PPM" help="The ppm error for the precursor mass to search candidates (this will overwrite the corresponding parameter in the input file)" />

	   <param name="scoreType" type="select" value="None" optional="False" label="scoreType" help="the score that will be used to order the hits" >
	  <option value="DotProduct" selected="False">DotProduct</option>
	  <option value="Jaccard" selected="True">Jaccard</option>
    </param>

	   <param name="ionization" type="select" value="" optional="True" label="ionization" help="Ion mode for the data acquisition for this sample (this will overwrite the corresponding parameter in the input file)" >
	  <option value="pos" selected="False">pos</option>
      <option value="neg" selected="False">neg</option>
    </param>
	
  </inputs>
  <outputs>
    <data name="output" type="text" format="csv" label="CSV result file" />
  </outputs>
  <help>

.. class:: infomark

| **Tool update: See the 'NEWS' section at the bottom of the page**

---------------------------------------------------

.. class:: infomark

**Authors**

| **Payam Emami (payam.emami@medsci.uu.se)** wrote and maintains this wrapper for CSI:FingerID identification.

---------------------------------------------------

.. class:: infomark

**Please cite**

Allen F, Greiner R, and Wishart D. Computational prediction of electron ionization mass spectra to assist in GC-MS compound identification. Submitted, 2016. Supporting Data: https://sourceforge.net/p/cfm-id/code/HEAD/tree/supplementary_material/2016_ei_ms_paper/
.. class:: infomark

**References**

Allen F, Greiner R, and Wishart D. Computational prediction of electron ionization mass spectra to assist in GC-MS compound identification. Submitted, 2016. Supporting Data: https://sourceforge.net/p/cfm-id/code/HEAD/tree/supplementary_material/2016_ei_ms_paper/

---------------------------------------------------

=====================
CFM-ID
=====================

-----------
Description
-----------

| This module is used to run CFM-ID on annotated MS/MS spectra for compound annotation. The parameters are set by **msms2metfrag**.

+------------------+-----------------+
| predecessor tool | successor tool  |
+------------------+-----------------+
| msms2metfrag     | aggregatemetfrag|
+------------------+-----------------+

-----------
Input files
-----------

+------------------------------+------------+
| File                         |   Format   |
+==============================+============+
| 1)  File with MetFrag        |    txt     |
|     parameters               |            |
|                              |            |
| 2) Database file             |    CSV     |
+------------------------------+------------+


----------
Parameters
----------

File with MetFrag parameters
        | File containing MetFrag parameters which is generated by **msms2metfrag**
        |

database file
        | Database file containing the molecules to be searched" help="This is a CSV file and has to contain candidate ID, name of the metabolite, InChi, SMILES and monoisotopic mass. It must have column header which will be specified below
        | An example is avaiable here: https://github.com/phnmnl/container-cfmid/raw/develop/testfiles/hmdb_2017-07-23.csv
        |
		
candidate_id
	| Column name representing ID of the database file
	| 

candidate_inchi_smiles
	| Column name representing Inchi or SMILES (preffered) of the database file
	|

candidate_mass
	| Column name representing monoisotopic mass of the database file
	|

databaseNameColumn
	| Column name representing name of the database file
	|

databaseInChIColumn
	| Column name representing name of the database file
	|

ppm
	| relative ppm error of fragments
	|

absDev
	| absolute error of fragments
	|

ppmPrecursor
	| relative ppm error of the precursor
	|

scoreType
	| This will overwrite the ionization mode in parameter file. Set "None" to use the ionization from the parameter file.
	|

ionization
	| Either DotProduct or Jaccard, used internally by CFM-ID
	|


------------
Output files
------------

output
        | A csv output file with scored candidates and properties
        |

---------------------------------------------------

----
NEWS
----


CHANGES IN VERSION 0.1
========================

First version

  </help>
</tool>
